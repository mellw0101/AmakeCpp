#!/bin/bash

# Get the architecture of the machine.
ARCH=$(uname -m)

comp_obj() {
  case $ARCH in
  x86_64)
    clang++ -stdlib=libc++ -std=c++23 -c -O2 -march=native -funroll-loops -Rpass=loop-vectorize -flto -m64 -Wall -Werror -static src/cpp/$1.cpp -o build/obj/$1.o
    ;;
  aarch64)
    clang++ -stdlib=libc++ -std=c++23 -c -O2 -funroll-loops -Rpass=loop-vectorize -flto -m64 -Wall -Werror -static src/cpp/$1.cpp -o build/obj/$1.o
    ;;
  *)
    ;;
  esac
  echo "$1"
}

link_obj() {
  case $ARCH in
  x86_64)
    /usr/bin/clang++ -stdlib=libc++ -std=c++23 -flto -s -O2 -march=native \
    /usr/lib/libc++.a /usr/lib/libc++abi.a /usr/lib/libz.a \
    build/obj/main.o build/obj/utils.o build/obj/compile.o build/obj/link.o \
    /usr/lib/Mlib.a \
    -o build/bin/AmakeCpp
    ;;
  aarch64)
    /usr/bin/clang++ -stdlib=libc++ -std=c++23 -flto -s -O2 \
    /usr/lib/libc++.a /usr/lib/libc++abi.a /usr/lib/libz.a \
    build/obj/main.o build/obj/utils.o build/obj/compile.o build/obj/link.o \
    /usr/lib/Mlib.a \
    -o build/bin/AmakeCpp
    ;;
  esac
  sudo cp build/bin/AmakeCpp /usr/bin/AmakeCpp
}

# Compile all sub parts.
comp_obj main
comp_obj utils
comp_obj link
comp_obj compile

# Link and install obj.
link_obj